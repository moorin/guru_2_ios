//
//  ViewController.swift
//  LottoMaker
//
//  Created by swuad_05 on 27/12/2019.
//  Copyright © 2019 swuad_05. All rights reserved.
// added pod 'FMDB'

// 저장하는 방법
// 1. UserDefault : 앱에서 간단한 정보를 저장하는 도구 -> ios 제공
// 2. CoreData : ios 자체 DB - 클래스 형태로 다룸
// 3. 로컬 DB : Sqlite, Realm 외부 제작사의 DB
// 4. iCould : ios 기반 앱 한정으로 기기 사이에 데이터 공유
// 5. 외부 저장공간 : 서버 - 파일, DB 등
// FMDB : Sqlite 라는 데이터베이스를 사용할 수 있게 도와주는 라이브러리

import UIKit
import FMDB

class ViewController: UIViewController, UITableViewDataSource
{
    var databasePath = String()
    var data:Array<Array<Int>> = [[Int]]()
    
    @IBOutlet weak var lottoTableView: UITableView!
    
    @IBOutlet weak var doDraw: UIBarButtonItem!
    
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return self.data.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "LottoCell", for: indexPath) as! Default
        
        let row = indexPath.row
        
        let row_data = self.data[row]
        
        cell.label_01.text = "\(row_data[0])"
        cell.label_02.text = "\(row_data[1])"
        cell.label_03.text = "\(row_data[2])"
        cell.label_04.text = "\(row_data[3])"
        cell.label_05.text = "\(row_data[4])"
        cell.label_06.text = "\(row_data[5])"
        
        return cell
    }
    

    /*
     1. TableView 배치하기
     2. TableView의 DataSource 설정하기
     3. DatatSource 메서드 내용 채우기
     4. 프로토타입 셀 설계
     5. 셀 소스코드 만들기
     6. 프로토타입 셀과 소스코드 연결
     7. 셀 구성 요소 outlet 연결
     */
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        //데이터베이스 초기화 작업
        //1. DB 파일의 경로 만들기
        let fileManager = FileManager.default
        let appDirs = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)
        self.databasePath = appDirs[0]+"/lotto.db" //데이터베이스를 저장할 경로를 정한것
        //2. 만약 해당 파일이 없다면 새로 만들기 - DB초기화(viewDidLoad에서 하기 때문에 분기하지 않으면 계속 실행되면서 초기화됨)
        if !fileManager.fileExists(atPath: self.databasePath){
            let db = FMDatabase(path: self.databasePath) //데이터베이스를 만드는 과정이기도 하고 여는 과정이기도 함
            //3. DB파일을 열어서 작업을 한다.
            if db.open(){
                //DBMS - DB라고 하는 것은 이거
                //1)데이터 베이스 -  어떤 앱이냐?를 결정(데이터베이스시스템은 한개인데 앱마다 데이터 베이스를 가지고 그걸 결정)
                //2) 테이블 - 어떤 종류의 데이터인지 결정(회원정보면 회원정보 테이블별도, 상품정보면 상품정보테이블 별도로)
                //3) Row(Record) - 한 줄의 데이터
                //4) Column - 각 칸의 데이터
                
                let sql_query = "create table if not exists lotto (id integer primary key autoincrement, number1 integer, number2 integer, number3 integer, number4 integer, number5 integer, number6 integer)" //오타가 있으면 테이블이 안만들어지지만 DB는 생성되서 다시 실행하면 DB파일이 있다고 뜸(다시 앱 삭제하고 실행해야함)
                if db.executeStatements(sql_query){
                    NSLog("쿼리 성공")
                }else{
                    NSLog("쿼리 실패")
                }
                //4. 작업이 끝나면 DB파일을 닫는다.
                db.close()
            }else{
                NSLog("DB 연결 실패")
            }
        }else{
            NSLog("기존 DB있음")
        }
    }

    
    @IBAction func doDraw(_ sender: UIBarButtonItem)
    {
        self.data = [[Int]]()
        NSLog("draw")
        for _ in 0...4
        {
            let sequence = 1...45
            var numbers = sequence.shuffled()
            numbers = numbers[0...5].sorted()
            self.data.append(numbers)
        }
        self.lottoTableView.reloadData()
    }
    
    @IBAction func doSave(_ sender: UIBarButtonItem)
    {
        NSLog("save")
        if self.data.count == 0
        {
            return
        }
        let db = FMDatabase(path: self.databasePath)
        if db.open()
        {
            let delete_query = "delete from lotto"
            db.executeStatements(delete_query)
            if db.hadError()
            {
                NSLog("테이블 초기화 오류")
            }
            else
            {
                for numbers in self.data
                {
                    let insert_query = "insert into lotto (number1, number2, number3, number4, number5, number6) values (\(numbers[0]), \(numbers[1]), \(numbers[2]), \(numbers[3]), \(numbers[4]), \(numbers[5]))"
                    do {
                        try db.executeUpdate(insert_query, values: nil)
                        NSLog("쿼리실행 성공")
                        
                    }catch {
                        NSLog("쿼리 오류")
                    }
                }
            }
            
            db.close()
        }
    }
    
    @IBAction func doLoad(_ sender: UIBarButtonItem)
    {
        NSLog("save")
        let db = FMDatabase(path: self.databasePath)
        if db.open()
        {
            let select_query = "select * from lotto"
            let result:FMResultSet? = db.executeQuery(select_query, withArgumentsIn: [])
            if result != nil
            {
                self.data = [[Int]]()
                
                while result!.next()
                {
                    var temp_array = [Int]()
                    temp_array.append(Int(result!.int(forColumnIndex: 1)))
                    temp_array.append(Int(result!.int(forColumnIndex: 2)))
                    temp_array.append(Int(result!.int(forColumnIndex: 3)))
                    temp_array.append(Int(result!.int(forColumnIndex: 4)))
                    temp_array.append(Int(result!.int(forColumnIndex: 5)))
                    temp_array.append(Int(result!.int(forColumnIndex: 6)))
                    
                    self.data.append(temp_array)
                    
                }
                NSLog("데이터 불러오기 성공")
            } else {
                NSLog("데이터 불러오기 실패")
            }
            db.close()
            self.lottoTableView.reloadData()
        }
        
    }
}


